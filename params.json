{"name":"Schoenberg","tagline":"generating atonality with a markov chain","body":"# AI Project1: Music Generator\r\n_**Elanor Wright** - Coordinator_    \r\n_**Gray Leonard** - Implementor_    \r\n_**Sean Yang** - Documentor_    \r\n\r\n### Overview\r\nFor this project, we plan to implement a program in which the user inputs a variety of musical preferences and our AI will generate and play a unique song based on those preferences. The AI will create a simple compositional structure of the song in order to generate smarter fluctuations in tempo and pitch. Every time, regardless if the user inputs the same preferences, the AI will play back a different melody that meets the users interests.  \r\n\r\n### Design and Technical Approach\r\nThe program itself will use a Hierarchical Markov Chain.  This structure allows the program to focus on overarching as well as fine details of the composition. To actually create the music, we will use the Java library [JFugue](http://www.jfugue.org/). Using this, we can compose by only manipulating strings. We will use a variety of decision trees to create paths for our AI to follow when the various user inputs are being made. The user will input variables such as duration and more importantly a ‘mood’ for the song.  Perhaps chosen from a list, moods (happy, energetic, etc) will be transcribed into variables of speed, key, and pitch, and so on. According to the user’s preferences, the AI will call upon a category and compose a song based on the user input.\r\n\r\n### Evaluation","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}